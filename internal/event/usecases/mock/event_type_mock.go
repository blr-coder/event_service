// Code generated by MockGen. DO NOT EDIT.
// Source: event_service/internal/event/usecases (interfaces: IEventTypeUseCase)

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	context "context"
	usecase_models "event_service/internal/event/usecases/usecase_models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIEventTypeUseCase is a mock of IEventTypeUseCase interface.
type MockIEventTypeUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockIEventTypeUseCaseMockRecorder
}

// MockIEventTypeUseCaseMockRecorder is the mock recorder for MockIEventTypeUseCase.
type MockIEventTypeUseCaseMockRecorder struct {
	mock *MockIEventTypeUseCase
}

// NewMockIEventTypeUseCase creates a new mock instance.
func NewMockIEventTypeUseCase(ctrl *gomock.Controller) *MockIEventTypeUseCase {
	mock := &MockIEventTypeUseCase{ctrl: ctrl}
	mock.recorder = &MockIEventTypeUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEventTypeUseCase) EXPECT() *MockIEventTypeUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIEventTypeUseCase) Create(arg0 context.Context, arg1 *usecase_models.CreateEventTypeInput) (*usecase_models.EventType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*usecase_models.EventType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIEventTypeUseCaseMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIEventTypeUseCase)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIEventTypeUseCase) Delete(arg0 context.Context, arg1 *usecase_models.DeleteEventTypeInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIEventTypeUseCaseMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIEventTypeUseCase)(nil).Delete), arg0, arg1)
}

// List mocks base method.
func (m *MockIEventTypeUseCase) List(arg0 context.Context, arg1 *usecase_models.EventTypeFilter) (usecase_models.EventTypes, uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(usecase_models.EventTypes)
	ret1, _ := ret[1].(uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockIEventTypeUseCaseMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockIEventTypeUseCase)(nil).List), arg0, arg1)
}

// Update mocks base method.
func (m *MockIEventTypeUseCase) Update(arg0 context.Context, arg1 *usecase_models.UpdateEventTypeInput) (*usecase_models.EventType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*usecase_models.EventType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockIEventTypeUseCaseMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIEventTypeUseCase)(nil).Update), arg0, arg1)
}
